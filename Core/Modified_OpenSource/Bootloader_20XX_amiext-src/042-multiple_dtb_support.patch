diff -Naur uboot/oem/ami/fmh/cmd_fmh.c uboot_new/oem/ami/fmh/cmd_fmh.c
--- uboot/oem/ami/fmh/cmd_fmh.c	2021-08-18 15:13:14.286643545 +0530
+++ uboot_new/oem/ami/fmh/cmd_fmh.c	2021-08-18 18:36:04.313739495 +0530
@@ -33,7 +33,7 @@
 #endif
 
 #define  KERNEL_LOADADDR    0xC00000
-#define  KERNEL_FILE        "/boot/uImage"
+#define  KERNEL_FILE        "/boot/ast2600evb_fit"
 #define  KERNEL_DTB         "/boot/kernel.dtb"
 
 #ifdef CONFIG_SPX_FEATURE_SECURE_BOOT_ENCRYPTION_SUPPORT
@@ -943,7 +943,7 @@
 BootFMH(unsigned short PathID)
 {
 #if 1
-	char Command[128] = "FMHEXECUTE";
+	char Command[128] = "bootm";
 	char AddrStr[128] = "0xFFFFFFFF";
 #if defined(CONFIG_SPX_FEATURE_MMC_BOOT) || defined(CONFIG_SPX_FEATURE_HW_EMMC_BOOT)  
 	char AddrStr2[128] = "0xFFFFFFFF";
@@ -1712,12 +1712,12 @@
 				console_assign(stdout,"nulldev");
 			if(rootisinitrd != 1)
 			{
-				retval =  do_bootm(NULL,0,4,argv);
+				retval =  do_bootm(NULL,0,2,argv);
 			}
 			else
 			{
 				//env_set("initrd_high","off");
-				retval = do_bootm(NULL,0,4,argv);
+				retval = do_bootm(NULL,0,2,argv);
 			}
 			console_assign(stdout,"serial");
 			printf("Failed\n");
@@ -1821,8 +1821,9 @@
 
 	if(do_ext4_load(NULL,0,5,argv) == 0)
 	{
-		
-		retval = snprintf(AddrStr2,128,"0x%x",CONFIG_SYS_LOAD_DTB_ADDR);
+		argv[0] = "bootm";
+		retval = do_bootm(NULL,0,1,argv);
+		/*retval = snprintf(AddrStr2,128,"0x%x",CONFIG_SYS_LOAD_DTB_ADDR);
 		if(retval < 0 || retval >= 128)
 		{
 			return retval;
@@ -1830,7 +1831,7 @@
 	
 		argv[0] = "ext4load";
 		argv[1] = "mmc";
-		argv[2] = &partition[0]; /* It is assumed that boot partition will be in slot 0 */
+		argv[2] = &partition[0]; // It is assumed that boot partition will be in slot 0 
 		argv[3] = &AddrStr2[0];
 		argv[4] = KERNEL_DTB;
 		argv[5] = NULL;
@@ -1846,7 +1847,7 @@
 			console_assign(stdout,"serial");
 			printf("Failed\n");
 			return retval;
-		}
+		}*/
 	}
 	console_assign(stdout,"nulldev");
 	printf("Unable to locate %s\n",KERNEL_FILE);
	